{"rule":"WHITESPACE_RULE","sentence":"^\\Qparagraph 4  -2.5ex -1ex -.25ex 1.25ex .25ex subparagraph 5  -2.5ex -1ex -.25ex 1.25ex .25ex subparagraph 6  -2.5ex -1ex -.25ex 1.25ex .25ex\\E$"}
{"rule":"UPPERCASE_SENTENCE_START","sentence":"^\\Qparagraph 4  -2.5ex -1ex -.25ex 1.25ex .25ex subparagraph 5  -2.5ex -1ex -.25ex 1.25ex .25ex subparagraph 6  -2.5ex -1ex -.25ex 1.25ex .25ex\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QEdgar Maddocks TO DO 1.3.3.1(Conv1D), 1.3.3.2+3, 1.4.3+4 Bedford School 03/05/2024\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThe neural network will be built using a library, that has an autograd engine implemented, all built from scratch.\\E$"}
{"rule":"AGREEMENT_SENT_START","sentence":"^\\QDraughts Draughts is an English board game played on an 8x8 checkered board, identical to a chessboard.\\E$"}
{"rule":"EN_A_VS_AN","sentence":"^\\QDraughts Draughts is an English board game played on an 8x8 checkered board, identical to a chessboard.\\E$"}
{"rule":"ALL_OF_THE","sentence":"^\\QAn image showing the starting position of a game of draughts The pieces only move diagonally (so will always be on black squares) and the aim is to take all of the opposing players pieces, or to put the opposing player in a position with no possible moves.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QFor automatic differentiation, some of the most popular systems include PyTorch's autograd, as well as autodiff by JAX.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q here is a row vector as this is the most common format for data as an input to a network (e.g being read from a csv).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QThey are sometimes referred to as artificial neural networks (ANNs) or simulated neural networks (SNNs).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\Q\\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q here is a row vector as this is the most common format for data as an input to a network (e.g. being read from a csv).\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QWhere \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q are the parameters at the next timestep, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q is the value of the parameters at the current timestep, \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q are the derivatives of the error with respect to each parameter, and \\E(?:Dummy|Ina|Jimmy-)[0-9]+\\Q is the learning rate.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QHowever, JAX builds on top of autograd and accelerates the linear algebra using an XLA backend.\\E$"}
{"rule":"MORFOLOGIK_RULE_EN_US","sentence":"^\\QTo start with, with the large amount of work that needs to be done, if time begins to run short there are lots of out-of-the-box frameworks to use and implement (such as PyTorch and JAX - mentioned earlier), while still allowing me to finish my project with sufficient difficulty.\\E$"}
