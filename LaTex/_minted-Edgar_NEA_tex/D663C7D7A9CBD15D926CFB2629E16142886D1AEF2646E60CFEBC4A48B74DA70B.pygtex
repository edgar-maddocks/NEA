\begin{Verbatim}[commandchars=\\\{\}]
    \PYG{k+kn}{from}\PYG{+w}{ }\PYG{n+nn}{nea.console\PYGZus{}checkers.consts}\PYG{+w}{ }\PYG{k+kn}{import} \PYG{p}{(}
        \PYG{n}{BLACK}\PYG{p}{,}
        \PYG{n}{WHITE}\PYG{p}{,}
        \PYG{n}{SIZE}\PYG{p}{,}
        \PYG{n}{BLACKS}\PYG{p}{,}
        \PYG{n}{WHITES}\PYG{p}{,}
        \PYG{n}{ACTION}\PYG{p}{,}
    \PYG{p}{)}

    \PYG{k+kn}{from}\PYG{+w}{ }\PYG{n+nn}{nea.console\PYGZus{}checkers}\PYG{+w}{ }\PYG{k+kn}{import} \PYG{n}{jit\PYGZus{}functions}

    \PYG{k+kn}{import}\PYG{+w}{ }\PYG{n+nn}{numpy}\PYG{+w}{ }\PYG{k}{as}\PYG{+w}{ }\PYG{n+nn}{np}

    \PYG{k}{class}\PYG{+w}{ }\PYG{n+nc}{CheckersGame}\PYG{p}{:}
\PYG{+w}{        }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{        Holds basic logic and console rendering of a checkers game}
\PYG{l+s+sd}{        \PYGZdq{}\PYGZdq{}\PYGZdq{}}

        \PYG{k}{def}\PYG{+w}{ }\PYG{n+nf+fm}{\PYGZus{}\PYGZus{}init\PYGZus{}\PYGZus{}}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{k+kc}{None}\PYG{p}{:}
\PYG{+w}{            }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{            Creates a new CheckersGame object}
\PYG{l+s+sd}{            \PYGZdq{}\PYGZdq{}\PYGZdq{}}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}init\PYGZus{}board}\PYG{p}{()} \PYG{c+c1}{\PYGZsh{} create numeric representation of board}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}last\PYGZus{}moved\PYGZus{}piece}\PYG{p}{:} \PYG{n+nb}{tuple}\PYG{p}{[}\PYG{n+nb}{int}\PYG{p}{,} \PYG{n+nb}{int}\PYG{p}{]} \PYG{o}{=} \PYG{k+kc}{None}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}player} \PYG{o}{=} \PYG{n}{WHITE}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}moves\PYGZus{}no\PYGZus{}capture} \PYG{o}{=} \PYG{l+m+mi}{0}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}switch\PYGZus{}player} \PYG{o}{=} \PYG{k+kc}{None}

        \PYG{k}{def}\PYG{+w}{ }\PYG{n+nf}{\PYGZus{}init\PYGZus{}board}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n}{np}\PYG{o}{.}\PYG{n}{ndarray}\PYG{p}{:}
\PYG{+w}{            }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Method which returns intial state of the board}

\PYG{l+s+sd}{            Returns:}
\PYG{l+s+sd}{                np.ndarray: initial board state}
\PYG{l+s+sd}{            \PYGZdq{}\PYGZdq{}\PYGZdq{}}
            \PYG{k}{return} \PYG{n}{jit\PYGZus{}functions}\PYG{o}{.}\PYG{n}{\PYGZus{}init\PYGZus{}board}\PYG{p}{()}

        \PYG{k}{def}\PYG{+w}{ }\PYG{n+nf}{get\PYGZus{}all\PYGZus{}valid\PYGZus{}moves}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n+nb}{dict}\PYG{p}{[}\PYG{n+nb}{str}\PYG{p}{,} \PYG{n+nb}{list}\PYG{p}{[}\PYG{n}{ACTION}\PYG{p}{]]:}
\PYG{+w}{            }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Returns a dictionary of take and simple moves.}
\PYG{l+s+sd}{            Does not account for if a double moves are available.}

\PYG{l+s+sd}{            Keys:}
\PYG{l+s+sd}{                Takes moves: \PYGZdq{}takes\PYGZdq{}}
\PYG{l+s+sd}{                Simple moves: \PYGZdq{}simple\PYGZdq{}}

\PYG{l+s+sd}{            Returns:}
\PYG{l+s+sd}{                dict[str, list[ACTION]]: Dictionary of available moves}
\PYG{l+s+sd}{            \PYGZdq{}\PYGZdq{}\PYGZdq{}}
            \PYG{n}{moves} \PYG{o}{=} \PYG{p}{\PYGZob{}}\PYG{l+s+s2}{\PYGZdq{}takes\PYGZdq{}}\PYG{p}{:} \PYG{p}{[],} \PYG{l+s+s2}{\PYGZdq{}simple\PYGZdq{}}\PYG{p}{:} \PYG{p}{[]\PYGZcb{}} \PYG{c+c1}{\PYGZsh{} dictionary containing take and simple moves}
            \PYG{k}{for} \PYG{n}{row} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n}{SIZE}\PYG{p}{):} \PYG{c+c1}{\PYGZsh{} for each row}
                \PYG{k}{for} \PYG{n}{col} \PYG{o+ow}{in} \PYG{n+nb}{range}\PYG{p}{(}\PYG{n}{SIZE}\PYG{p}{):} \PYG{c+c1}{\PYGZsh{} and each column}
                    \PYG{n}{piece} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{[}\PYG{n}{row}\PYG{p}{,} \PYG{n}{col}\PYG{p}{]}
                    \PYG{k}{if} \PYG{n}{piece} \PYG{o+ow}{in} \PYG{n}{WHITES} \PYG{o+ow}{and} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}player} \PYG{o}{==} \PYG{n}{WHITE}\PYG{p}{:}
                        \PYG{n}{moves}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}simple\PYGZdq{}}\PYG{p}{]} \PYG{o}{+=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}get\PYGZus{}valid\PYGZus{}simple\PYGZus{}moves}\PYG{p}{(}
                            \PYG{n}{row}\PYG{p}{,} \PYG{n}{col}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}player}
                        \PYG{p}{)} \PYG{c+c1}{\PYGZsh{} get simple moves from that square}
                        \PYG{n}{moves}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}takes\PYGZdq{}}\PYG{p}{]} \PYG{o}{+=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}get\PYGZus{}valid\PYGZus{}take\PYGZus{}moves}\PYG{p}{(}\PYG{n}{row}\PYG{p}{,} \PYG{n}{col}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}player}\PYG{p}{)}
                        \PYG{c+c1}{\PYGZsh{} get take moves from that square}
                    \PYG{k}{elif} \PYG{n}{piece} \PYG{o+ow}{in} \PYG{n}{BLACKS} \PYG{o+ow}{and} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}player} \PYG{o}{==} \PYG{n}{BLACK}\PYG{p}{:}
                        \PYG{n}{moves}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}simple\PYGZdq{}}\PYG{p}{]} \PYG{o}{+=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}get\PYGZus{}valid\PYGZus{}simple\PYGZus{}moves}\PYG{p}{(}
                            \PYG{n}{row}\PYG{p}{,} \PYG{n}{col}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}player}
                        \PYG{p}{)}
                        \PYG{n}{moves}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}takes\PYGZdq{}}\PYG{p}{]} \PYG{o}{+=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}get\PYGZus{}valid\PYGZus{}take\PYGZus{}moves}\PYG{p}{(}\PYG{n}{row}\PYG{p}{,} \PYG{n}{col}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}player}\PYG{p}{)}

            \PYG{k}{return} \PYG{n}{moves}

        \PYG{k}{def}\PYG{+w}{ }\PYG{n+nf}{\PYGZus{}get\PYGZus{}valid\PYGZus{}take\PYGZus{}moves}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{row}\PYG{p}{:} \PYG{n+nb}{int}\PYG{p}{,} \PYG{n}{col}\PYG{p}{:} \PYG{n+nb}{int}\PYG{p}{,} \PYG{n}{player}\PYG{p}{:} \PYG{n+nb}{str}\PYG{p}{):}
\PYG{+w}{            }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{            Gets all valid take moves available for a given square}

\PYG{l+s+sd}{            Args:}
\PYG{l+s+sd}{                row (int): row the square is on}
\PYG{l+s+sd}{                col (int): column the square is on}
\PYG{l+s+sd}{                player (str): player to check if moves are available for}

\PYG{l+s+sd}{            Returns:}
\PYG{l+s+sd}{                list: tuple of tuples}
\PYG{l+s+sd}{            \PYGZdq{}\PYGZdq{}\PYGZdq{}}
            \PYG{c+c1}{\PYGZsh{} use jit function for faster computation}
            \PYG{k}{return} \PYG{n}{jit\PYGZus{}functions}\PYG{o}{.}\PYG{n}{\PYGZus{}get\PYGZus{}valid\PYGZus{}take\PYGZus{}moves}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{,} \PYG{n}{row}\PYG{p}{,} \PYG{n}{col}\PYG{p}{,} \PYG{n}{player}\PYG{p}{)}

        \PYG{k}{def}\PYG{+w}{ }\PYG{n+nf}{step}\PYG{p}{(}\PYG{n+nb+bp}{self}\PYG{p}{,} \PYG{n}{action}\PYG{p}{:} \PYG{n}{ACTION}\PYG{p}{)} \PYG{o}{\PYGZhy{}\PYGZgt{}} \PYG{n+nb}{tuple}\PYG{p}{[}\PYG{n+nb}{bool}\PYG{p}{,} \PYG{n}{np}\PYG{o}{.}\PYG{n}{ndarray}\PYG{p}{,} \PYG{n+nb}{bool}\PYG{p}{,} \PYG{n+nb}{float}\PYG{p}{]:}
\PYG{+w}{            }\PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}Completes a step given an action in the board environment}

\PYG{l+s+sd}{            Args:}
\PYG{l+s+sd}{                action (ACTION): Desired action to take}

\PYG{l+s+sd}{            Returns:}
\PYG{l+s+sd}{                tuple[bool, np.ndarray, bool, float]: (valid\PYGZus{}move, next\PYGZus{}obs, done, reward)}
\PYG{l+s+sd}{            \PYGZdq{}\PYGZdq{}\PYGZdq{}}
            \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}switch\PYGZus{}player} \PYG{o}{=} \PYG{k+kc}{True} \PYG{c+c1}{\PYGZsh{} default switch turn at end of mvoe}
            \PYG{n}{rowcol\PYGZus{}move\PYGZus{}from}\PYG{p}{,} \PYG{n}{rowcol\PYGZus{}move\PYGZus{}to} \PYG{o}{=} \PYG{n}{action}\PYG{p}{[}\PYG{l+m+mi}{0}\PYG{p}{],} \PYG{n}{action}\PYG{p}{[}\PYG{l+m+mi}{1}\PYG{p}{]} \PYG{c+c1}{\PYGZsh{} break action into two tuples}
            \PYG{k}{if} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}last\PYGZus{}moved\PYGZus{}piece} \PYG{o+ow}{is} \PYG{k+kc}{None}\PYG{p}{:} \PYG{c+c1}{\PYGZsh{} if this is not a second take}
                \PYG{n}{all\PYGZus{}valid\PYGZus{}moves} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{get\PYGZus{}all\PYGZus{}valid\PYGZus{}moves}\PYG{p}{()}
                \PYG{k}{if} \PYG{p}{(}
                    \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{all\PYGZus{}valid\PYGZus{}moves}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}takes\PYGZdq{}}\PYG{p}{])} \PYG{o}{==} \PYG{l+m+mi}{0}
                    \PYG{o+ow}{and} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{all\PYGZus{}valid\PYGZus{}moves}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}simple\PYGZdq{}}\PYG{p}{])} \PYG{o}{==} \PYG{l+m+mi}{0}
                \PYG{p}{):}
                    \PYG{k}{return} \PYG{p}{(}\PYG{k+kc}{True}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{,} \PYG{k+kc}{True}\PYG{p}{,} \PYG{o}{\PYGZhy{}}\PYG{l+m+mi}{1}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} return loss if no moves available}

                \PYG{n}{valid\PYGZus{}moves\PYGZus{}for\PYGZus{}turn} \PYG{o}{=} \PYG{p}{(}
                    \PYG{n}{all\PYGZus{}valid\PYGZus{}moves}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}takes\PYGZdq{}}\PYG{p}{]}
                    \PYG{k}{if} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{all\PYGZus{}valid\PYGZus{}moves}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}takes\PYGZdq{}}\PYG{p}{])} \PYG{o}{\PYGZgt{}} \PYG{l+m+mi}{0}
                    \PYG{k}{else} \PYG{n}{all\PYGZus{}valid\PYGZus{}moves}\PYG{p}{[}\PYG{l+s+s2}{\PYGZdq{}simple\PYGZdq{}}\PYG{p}{]}
                \PYG{p}{)} \PYG{c+c1}{\PYGZsh{} get list of all valid moves}

                \PYG{k}{if} \PYG{n}{action} \PYG{o+ow}{not} \PYG{o+ow}{in} \PYG{n}{valid\PYGZus{}moves\PYGZus{}for\PYGZus{}turn}\PYG{p}{:}
                    \PYG{k}{return} \PYG{p}{(}\PYG{k+kc}{False}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{,} \PYG{k+kc}{False}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} return invalid move}
                \PYG{k}{else}\PYG{p}{:}
                    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{[}\PYG{o}{*}\PYG{n}{rowcol\PYGZus{}move\PYGZus{}to}\PYG{p}{]} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{[}\PYG{o}{*}\PYG{n}{rowcol\PYGZus{}move\PYGZus{}from}\PYG{p}{]} \PYG{c+c1}{\PYGZsh{} update positon}
                    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{clear}\PYG{p}{(}\PYG{o}{*}\PYG{n}{rowcol\PYGZus{}move\PYGZus{}from}\PYG{p}{)}
                    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}moves\PYGZus{}no\PYGZus{}capture} \PYG{o}{+=} \PYG{l+m+mi}{1} \PYG{c+c1}{\PYGZsh{} add to draw condition}

            \PYG{k}{elif} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}last\PYGZus{}moved\PYGZus{}piece} \PYG{o+ow}{is} \PYG{o+ow}{not} \PYG{k+kc}{None}\PYG{p}{:} \PYG{c+c1}{\PYGZsh{} if this is a second take move}
                \PYG{n}{valid\PYGZus{}moves\PYGZus{}for\PYGZus{}turn} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}get\PYGZus{}valid\PYGZus{}take\PYGZus{}moves}\PYG{p}{(}
                    \PYG{o}{*}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}last\PYGZus{}moved\PYGZus{}piece}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}player}
                \PYG{p}{)} \PYG{c+c1}{\PYGZsh{} get valid actions}

                \PYG{k}{if} \PYG{n}{action} \PYG{o+ow}{not} \PYG{o+ow}{in} \PYG{n}{valid\PYGZus{}moves\PYGZus{}for\PYGZus{}turn}\PYG{p}{:}
                    \PYG{k}{return} \PYG{p}{(}\PYG{k+kc}{False}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{,} \PYG{k+kc}{False}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} return invalid moves}
                \PYG{k}{else}\PYG{p}{:}
                    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{[}\PYG{o}{*}\PYG{n}{rowcol\PYGZus{}move\PYGZus{}to}\PYG{p}{]} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{[}\PYG{o}{*}\PYG{n}{rowcol\PYGZus{}move\PYGZus{}from}\PYG{p}{]} \PYG{c+c1}{\PYGZsh{} update position}
                    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{clear}\PYG{p}{(}\PYG{o}{*}\PYG{n}{rowcol\PYGZus{}move\PYGZus{}from}\PYG{p}{)}

            \PYG{n}{row\PYGZus{}from}\PYG{p}{,} \PYG{n}{col\PYGZus{}from} \PYG{o}{=} \PYG{n}{rowcol\PYGZus{}move\PYGZus{}from}
            \PYG{n}{row\PYGZus{}to}\PYG{p}{,} \PYG{n}{col\PYGZus{}to} \PYG{o}{=} \PYG{n}{rowcol\PYGZus{}move\PYGZus{}to}
            \PYG{k}{if} \PYG{n+nb}{abs}\PYG{p}{(}\PYG{n}{row\PYGZus{}to} \PYG{o}{\PYGZhy{}} \PYG{n}{row\PYGZus{}from}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mi}{2}\PYG{p}{:} \PYG{c+c1}{\PYGZsh{} if it was a take move}
                \PYG{n}{one\PYGZus{}row} \PYG{o}{=} \PYG{l+m+mf}{0.5} \PYG{o}{*} \PYG{p}{(}\PYG{n}{row\PYGZus{}to} \PYG{o}{\PYGZhy{}} \PYG{n}{row\PYGZus{}from}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} get the direction horizontally (1 or \PYGZhy{}1)}
                \PYG{n}{one\PYGZus{}col} \PYG{o}{=} \PYG{l+m+mf}{0.5} \PYG{o}{*} \PYG{p}{(}\PYG{n}{col\PYGZus{}to} \PYG{o}{\PYGZhy{}} \PYG{n}{col\PYGZus{}from}\PYG{p}{)} \PYG{c+c1}{\PYGZsh{} get direction vertically (1 or \PYGZhy{}1)}
                \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{clear}\PYG{p}{(}\PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{row\PYGZus{}from} \PYG{o}{+} \PYG{n}{one\PYGZus{}row}\PYG{p}{),} \PYG{n+nb}{int}\PYG{p}{(}\PYG{n}{col\PYGZus{}from} \PYG{o}{+} \PYG{n}{one\PYGZus{}col}\PYG{p}{))} \PYG{c+c1}{\PYGZsh{} remove opponent piece}
                \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}moves\PYGZus{}no\PYGZus{}capture} \PYG{o}{=} \PYG{l+m+mi}{0}
                \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}last\PYGZus{}moved\PYGZus{}piece} \PYG{o}{=} \PYG{n}{row\PYGZus{}to}\PYG{p}{,} \PYG{n}{col\PYGZus{}to}
                \PYG{n}{double\PYGZus{}moves} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}get\PYGZus{}valid\PYGZus{}take\PYGZus{}moves}\PYG{p}{(}
                    \PYG{o}{*}\PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}last\PYGZus{}moved\PYGZus{}piece}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}player}
                \PYG{p}{)} \PYG{c+c1}{\PYGZsh{} check if there is now a second take available}
                \PYG{k}{if} \PYG{n+nb}{len}\PYG{p}{(}\PYG{n}{double\PYGZus{}moves}\PYG{p}{)} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{:}
                    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}last\PYGZus{}moved\PYGZus{}piece} \PYG{o}{=} \PYG{k+kc}{None}
                \PYG{k}{else}\PYG{p}{:}
                    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}switch\PYGZus{}player} \PYG{o}{=} \PYG{k+kc}{False}

            \PYG{c+c1}{\PYGZsh{} crown pieces if they reach opposite edge of board}
            \PYG{k}{if} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{[}\PYG{n}{row\PYGZus{}to}\PYG{p}{,} \PYG{n}{col\PYGZus{}to}\PYG{p}{]} \PYG{o+ow}{in} \PYG{n}{WHITES} \PYG{o+ow}{and} \PYG{n}{row\PYGZus{}to} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{:}
                \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{crown}\PYG{p}{(}\PYG{n}{row\PYGZus{}to}\PYG{p}{,} \PYG{n}{col\PYGZus{}to}\PYG{p}{)}
            \PYG{k}{if} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{[}\PYG{n}{row\PYGZus{}to}\PYG{p}{,} \PYG{n}{col\PYGZus{}to}\PYG{p}{]} \PYG{o+ow}{in} \PYG{n}{BLACKS} \PYG{o+ow}{and} \PYG{n}{row\PYGZus{}to} \PYG{o}{==} \PYG{l+m+mi}{7}\PYG{p}{:}
                \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{crown}\PYG{p}{(}\PYG{n}{row\PYGZus{}to}\PYG{p}{,} \PYG{n}{col\PYGZus{}to}\PYG{p}{)}

            \PYG{c+c1}{\PYGZsh{} check win and draw conditions}
            \PYG{k}{if} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}moves\PYGZus{}no\PYGZus{}capture} \PYG{o}{==} \PYG{l+m+mi}{40}\PYG{p}{:}
                \PYG{k}{return} \PYG{p}{(}\PYG{k+kc}{True}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{,} \PYG{k+kc}{True}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{)}
            \PYG{k}{elif} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n\PYGZus{}black\PYGZus{}pieces} \PYG{o}{==} \PYG{l+m+mi}{1} \PYG{o+ow}{and} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n\PYGZus{}white\PYGZus{}pieces} \PYG{o}{==} \PYG{l+m+mi}{1}\PYG{p}{:}
                \PYG{k}{return} \PYG{p}{(}\PYG{k+kc}{True}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{,} \PYG{k+kc}{True}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{)}
            \PYG{k}{elif} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{n\PYGZus{}opposite\PYGZus{}player\PYGZus{}pieces} \PYG{o}{==} \PYG{l+m+mi}{0}\PYG{p}{:}
                \PYG{k}{return} \PYG{p}{(}\PYG{k+kc}{True}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{,} \PYG{k+kc}{True}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{)}
            \PYG{k}{elif} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{no\PYGZus{}moves\PYGZus{}available\PYGZus{}for\PYGZus{}opposite\PYGZus{}player}\PYG{p}{():}
                \PYG{k}{return} \PYG{p}{(}\PYG{k+kc}{True}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{,} \PYG{k+kc}{True}\PYG{p}{,} \PYG{l+m+mi}{1}\PYG{p}{)}
            \PYG{k}{else}\PYG{p}{:}
                \PYG{k}{if} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}switch\PYGZus{}player}\PYG{p}{:}
                    \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}player} \PYG{o}{=} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{opposite\PYGZus{}player}
                \PYG{k}{return} \PYG{p}{(}\PYG{k+kc}{True}\PYG{p}{,} \PYG{n+nb+bp}{self}\PYG{o}{.}\PYG{n}{\PYGZus{}board}\PYG{p}{,} \PYG{k+kc}{False}\PYG{p}{,} \PYG{l+m+mi}{0}\PYG{p}{)}


\end{Verbatim}
